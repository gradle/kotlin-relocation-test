apply plugin: 'groovy'

repositories {
    jcenter()
}

dependencies {
    testCompile "com.google.guava:guava:23.5-jre"
    testCompile gradleTestKit()
    testCompile "junit:junit:4.12"
    testCompile "org.spockframework:spock-core:1.1-groovy-2.4@jar"
}

def checkoutDir = file("spek")
def originalDir = file("build/original")
def relocatedDir = file("build/relocated")
def commit = ["git", "rev-parse", "HEAD"].execute([], checkoutDir).text.trim()

task cleanCheckout(type: Exec) {
    workingDir = checkoutDir
    commandLine = ["git", "clean", "-fdx"]
}

task cloneOriginal(type: Exec) {
    inputs.property "commit", commit
    outputs.dir originalDir
    workingDir = checkoutDir
    commandLine = ["git", "clone", checkoutDir, originalDir]
    doFirst {
        delete originalDir
    }
}

task cloneRelocated(type: Exec) {
    inputs.property "commit", commit
    outputs.dir relocatedDir
    workingDir = checkoutDir
    commandLine = ["git", "clone", checkoutDir, relocatedDir]
    doFirst {
        delete relocatedDir
    }
}

assemble {
    dependsOn cloneOriginal
    dependsOn cloneRelocated
}

test {
    dependsOn assemble

    systemProperty "original.dir", originalDir.absolutePath
    systemProperty "relocated.dir", relocatedDir.absolutePath
    systemProperty "org.gradle.kotlin.test.gradle-installation", System.getProperty("org.gradle.kotlin.test.gradle-installation")
    systemProperty "org.gradle.kotlin.test.kotlin-version", System.getProperty("org.gradle.kotlin.test.kotlin-version")
    systemProperty "org.gradle.kotlin.test.scan-url", System.getProperty("org.gradle.kotlin.test.scan-url")

    // Ensure that timestamps are not triggered when running this as a smoke test
    environment.remove("TEAMCITY_VERSION")

    inputs.dir originalDir withPropertyName "original.dir"
    inputs.dir relocatedDir withPropertyName "relocated.dir"

    if (System.getenv("TRAVIS") == "true" || Boolean.getBoolean("org.gradle.kotlin.test.show-output")) {
        testLogging.showStandardStreams = true
    }
}
